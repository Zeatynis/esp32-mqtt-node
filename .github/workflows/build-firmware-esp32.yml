name: Create Firmware for ESP32
run-name: ${{ github.actor }} creates the firmware ðŸš€
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v3
      with:
        ref: master
    - name: setup-esp-idf
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget flex bison gperf python3 python3-venv cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0
        sudo apt-get clean autoclean
        sudo apt-get autoremove --yes
        sudo rm -rf /var/lib/{apt,dpkg,cache,log}/
        mkdir -p ~/esp
        cd ~/esp
        git clone --recursive https://github.com/espressif/esp-idf.git
        cd ~/esp/esp-idf
        ./install.sh esp32
        ./install.sh esp32s2
        sudo rm -rf ~/esp/esp-idf/docs
        sudo rm -rf ~/esp/esp-idf/examples
    - name: build-firmware
      run: |
        . ~/esp/esp-idf/export.sh
        idf.py build
    - name: Copy-ESP-Web-Files
      run: |
        mkdir public
        mkdir -p public/build/bootloader
        mkdir -p public/build/partition_table
        cp esp-web-flash/index.html public/
        cp esp-web-flash/esp-tool-flash.json public/
        cp esp-web-flash/build/bootloader/bootloader.bin public/build/bootloader
        cp esp-web-flash/build/partition_table/partition-table.bin public/build/partition_table/partition-table.bin
        cp esp-web-flash/build/cedalo_mqtt_esp32.bin public/build/cedalo_mqtt_esp32.bin
        ls -l public
    - name: Setup Pages
      uses: actions/configure-pages@v2.1.1
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
          path: 'public'
    - name: Deploy GitHub Pages site
      uses: actions/deploy-pages@v1.2.2
